name: Deploycode

on:
  push:
    branches:
     - main
jobs:
 
  build-and-deploy-live:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    if: github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v3
    - name: Install Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16.x'
    - name: Install dependencies test
      run: npm install
      
    - name:  latest react
      run : npm install react-scripts@latest
    - name: npm update
      run : npm update

    - name: Build the app
      run: npm run build:prod
      
  #  - name: Deploy to main server
  #    uses: appleboy/ssh-action@v0.1.7
  #    with:
  #      host: ${{ secrets.HOSTNAME }}
  #      username: ${{ secrets.USERNAME }}
  #     password: ${{ secrets.PASSWORD }}
  #      script: |
  #        mkdir -p /var/www/my-app
  #        rsync -av build/ /var/www/my-app
  #        echo "Restarting web server..."
  #        sudo service apache2 restart  
    - name: Deploy to main server
      uses: cross-the-world/ssh-scp-ssh-pipelines@v1.1.4
      with:
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        #pass: ${{ secrets.PASSWORD }}
        user: ${{ secrets.USERNAME }}
        host: ${{ secrets.HOSTNAME }}
        scp: |
         './build/*' => /tmp/dotnet/
    - name: Start the application with PM2
      uses: appleboy/ssh-action@master
      with:
          host: ${{ secrets.HOSTNAME }}
          username: ${{ secrets.USERNAME }}
          #password: ${{ secrets.PASSWORD }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
             sudo mv /tmp/dotnet/* /var/www/
   # - name: local remote scp 1
   #   uses: cross-the-world/scp-pipeline@master
   #   with:
   #       host: ${{ secrets.HOSTNAME }}
   #       port: ${{ secrets.PORT }}
   #       user: ${{ secrets.USERNAME }}
   #       pass: ${{ secrets.PASSWORD }}
          #local: "./build/*"
          #remote: /var/www
   #       scp: |
   #           '.build/*' => /var/www
   # - name: Deploy to Server
   #   uses: appleboy/ssh-action@v2
   #   with:
   #       host: ${{ secrets.HOSTNAME }}
   #       username: ${{ secrets.USERNAME }}
   #       password: ${{ secrets.PASSWORD }} 
   #       port: 22
   #       script: |
   #         cd /var/www
   #         scp -r $GITHUB_WORKSPACE/build/* .
   # - name: Install rsync
   #   run: sudo apt-get update && sudo apt-get install -y rsync

   # - name: Deploy build to server
   #   run: |
   #       rsync -azP --delete ./build/* ${{ secrets.USERNAME }}@${{ secrets.HOSTNAME }}:/var/www
   #       sshpass -p ${{ secrets.PASSWORD }} ssh ${{ secrets.USERNAME }}@${{ secrets.HOSTNAME }} "cd /var/www"
   # - name: Deploy
   #   uses: mhart/ssh-action@v2
   #   with:
   #       host: ${{ secrets.HOSTNAME }}
   #       username: ${{ secrets.USERNAME }}
   #       password: ${{ secrets.PASSWORD }}
   #       #key: ${{ secrets.SERVER_KEY }}
   #       script: |
   #         #mkdir -p /var/www/my-app
   #         rsync -av build/ /var/www
   #         echo "Restarting web server..."
   #         sudo service apache2 restart
   # - name: Copy folder content recursively to remote
   #  uses: garygrossgarten/github-action-scp@release
   #   with:
   #    local: build/*
   #    remote: ~/var/www
   #    host: 43.231.127.206
   #    port: 22
   #    username: root
   #    password: cf7@L!QEsAt3#D
